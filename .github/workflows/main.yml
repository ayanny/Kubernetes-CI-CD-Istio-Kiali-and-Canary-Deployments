name: CICD EKS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
      
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
        
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1        


    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ci-cd-demo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
          
    - name: setup kubeconfig
      id: setup-kubeconfig
      env: 
        CLUSTERNAME: my-demo
      run: |
          aws eks --region us-east-2 update-kubeconfig --name $CLUSTERNAME
    - name: Deploy k8s yaml
      id: deploy-k8s-yaml
      env:
        K8S_YAML_DIR: ./manifests 
        IMAGE_NAME: ${{ steps.build-image.outputs.image }}
      run: |
        # Setup kustomize
        cd $K8S_YAML_DIR
        curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        ./kustomize edit set image example-eks=$IMAGE_NAME
        ./kustomize build . | kubectl apply -f -
        # List Public IP of cluster
        kubectl get services -o wide -n test
        kubectl get ingress -n test
